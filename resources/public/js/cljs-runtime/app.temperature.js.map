{"version":3,"sources":["app/temperature.cljs"],"mappings":";AAGA,AAAA,AAAMA,AAAMC;AAAZ,AACE,AAAG,AAAA,AAAGA,AAAM,AAAA,AAAA;;AAEd,AAAA,AAAMC,AAAMC;AAAZ,AACE,AAAA,AAAM,AAAGA,AAAE,AAAA,AAAA;;AAEb,AAAA,AAAMC,AAAcC;AAApB,AACE,AAACC,AAAED,AAAE,AAAA,AAAIA,AAAEE;;AAEb,AAAA,AAAMC,AAAmBC,AAAMC;AAA/B,AACE,AAAMC,AAAM,AAAA,AAACC;AAAb,AACE;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AACkB,AAAA,AAAAA,AAAA,AAAA,AAAKF,AACJF,AAEE,AAAKK;AAAL,AACE,AAAG,AAAUA;;AACb,AAAG,AAAUA;AANpC,AAOsB,AAAKA;AAAL,AACE,AAAMC,AAAE,AAAA,AAAID;AAAZ,AACE,AAACE,AAAOP,AAAMM;;AACd,AAAI,AAACX,AAAaW;AAChB,AACE,AAAA,AAACC,AAAOL;;AACR,AAACD,AAAAA,AAAAA,AAAYK,AAAAA;;AACf,AAAA,AAACC,AAAOL;;;;;AAExC,AAAA,AAAMM;AAAN,AACE,AAAMC,AAAc,AAAA,AAACN;AACfO,AAAiB,AAACP,AAAO,AAAA,AAAAC,AAACX,AAAMgB;AADtC,AAEE;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAE,AAGKZ,AAAkBU;AAHvB,AAGsC,AAACF,AAAOG,AAAiB,AAAAC,AAAClB;AAHhE,AAAA,AAAA,AAAA,AAAA,AAAAmB,AAKKb,AAAkBW;AALvB,AAKyC,AAACH,AAAOE,AAAc,AAAAG,AAACrB","names":["app.temperature/f->c","f","app.temperature/c->f","c","app.temperature/valid-float?","s","cljs.core._EQ_","js/parseFloat","app.temperature/temperature-input","value","is-valid-fn","valid","reagent.core.atom","cljs.core/deref","e","v","cljs.core/reset!","app.temperature/temperature-converter","celsius-input","fahrenheit-input","p1__38325#","p1__38326#"],"sourcesContent":["(ns app.temperature\n  (:require [reagent.core :as r]))\n\n(defn f->c [f]\n  (* (- f 32) (/ 5 9)))\n\n(defn c->f [c]\n  (+ 32 (* c (/ 9 5))))\n\n(defn valid-float? [s]\n  (= s (-> s js/parseFloat str)))\n\n(defn temperature-input [value is-valid-fn]\n  (let [valid (r/atom true)]\n    (fn []\n      [:input {:class (if @valid \"valid\" \"invalid\")\n               :value @value\n               ;; You shouldn't have to manually delete the whole contents of the input\n               :on-click (fn [e]\n                           (. (.-target e) focus)\n                           (. (.-target e) select))\n               :on-change (fn [e]\n                            (let [v (-> e .-target .-value)]\n                              (reset! value v)\n                              (if (valid-float? v)\n                                (do\n                                  (reset! valid true)\n                                  (is-valid-fn v))\n                                (reset! valid false))))}])))\n\n(defn temperature-converter []\n  (let [celsius-input (r/atom 0)\n        fahrenheit-input (r/atom (c->f @celsius-input))]\n    (fn []\n      [:div\n       [:div \"Celsius: \"\n        [temperature-input celsius-input #(reset! fahrenheit-input (c->f %))]]\n       [:div \"Fahrenheit: \"\n        [temperature-input fahrenheit-input #(reset! celsius-input (f->c %))]]])))\n"]}